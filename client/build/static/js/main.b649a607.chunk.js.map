{"version":3,"sources":["actions/index.js","actions/types.js","components/Payments.js","components/Header.js","components/Landing.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","Payments","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","this","auth","href","key","style","margin","credits","to","renderContent","Landing","textAlign","Dashboard","SurveyNew","App","exact","path","component","combineReducers","state","action","console","log","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"yYASaA,EAAY,yDAAM,WAAMC,GAAN,eAAAC,EAAA,sEACTC,IAAMC,IAAI,qBADD,OACrBC,EADqB,OAE3BJ,EAAS,CAAEK,KCTW,aDSOC,QAASF,EAAIG,OAFf,2CAAN,uDAUZC,EAAc,SAAAC,GAAK,8CAAI,WAAMT,GAAN,eAAAC,EAAA,sEACdC,IAAMQ,KAAK,cAAeD,GADZ,OAC1BL,EAD0B,OAKhCJ,EAAS,CAAEK,KCtBW,aDsBOC,QAASF,EAAIG,OALV,2CAAJ,uD,iBEd1BI,E,4JACF,WAAS,IAAD,OAEJ,OACI,kBAAC,IAAD,CACIC,KAAK,YACLC,YAAY,sCACZC,OAAQ,IACRL,MAAQ,SAAAA,GAAK,OAAI,EAAKM,MAAMP,YAAYC,IACxCO,UAAWC,+GAEP,4BAAQC,UAAU,OAAlB,oB,GAXGC,aAiBRC,cAAQ,KAAMC,EAAdD,CAAuBT,GClBhCW,E,mKACF,WACI,OAAQC,KAAKR,MAAMS,MACf,KAAK,KACD,MAAO,iBAEX,KAAK,EACD,OAAQ,4BAAI,uBAAGC,KAAK,gBAAR,sBAEhB,QACI,MAAO,CACP,wBAAIC,IAAI,KAAI,kBAAC,EAAD,MAAZ,KACA,wBAAIA,IAAI,IAAIC,MAAO,CAACC,OAAQ,WAA5B,YACeL,KAAKR,MAAMS,KAAKK,SAE/B,wBAAIH,IAAI,KAAI,uBAAGD,KAAK,eAAR,e,oBAMxB,WAEI,OAEA,6BACI,yBAAKP,UAAU,eACf,kBAAC,IAAD,CACAY,GAAIP,KAAKR,MAAMS,KAAO,WAAa,IACnCN,UAAU,mBAFV,aAMA,wBAAIA,UAAU,SACRK,KAAKQ,uB,GAlCFZ,aA+CNC,mBAJf,YACI,MAAO,CAAEI,KADqB,EAAPA,QAIZJ,CAAyBE,GCtCzBU,EAXC,WACZ,OACI,yBAAKL,MAAO,CAAEM,UAAW,WACrB,0CADJ,sCCIFC,EAAY,kBAAM,0CAClBC,EAAY,kBAAM,0CAGlBC,E,uKACF,WACIb,KAAKR,MAAMhB,c,oBAEf,WACA,OACI,yBAAKmB,UAAU,aACX,kBAAC,IAAD,KACI,6BACI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,WAAWC,UAAWL,IACxC,kBAAC,IAAD,CAAOI,KAAK,eAAeC,UAAWJ,W,GAZxChB,aAoBHC,cAAQ,KAAMC,EAAdD,CAAuBgB,GC7BvBI,cAAgB,CAC3BhB,KCFW,WAAgC,IAAvBiB,EAAsB,uDAAd,KAAMC,EAAQ,uCAE1C,OADAC,QAAQC,IAAIF,GACJA,EAAOrC,MACX,INHkB,aMId,OAAOqC,EAAOpC,UAAW,EAC7B,QACI,OAAOmC,MCObI,EAAQC,YAAYC,EAAU,GAAIC,YAAgBC,MAExDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GAAO,kBAAC,EAAD,OACxBO,SAASC,cAAc,Y","file":"static/js/main.b649a607.chunk.js","sourcesContent":["// to house the action creators\r\n// redux thunk allows action creators to be created \r\n// with always immediately returning an action\r\n\r\n// import axios to make ajax request\r\nimport axios from 'axios';\r\nimport { FETCH_USER } from './types';\r\n\r\n// action creator to get the user - login verified\r\nexport const fetchUser = () => async dispatch => {\r\n    const res = await axios.get('/api/current_user')\r\n    dispatch({ type: FETCH_USER, payload: res.data })\r\n    };\r\n\r\n    // using information captured by the auth reducer to \r\n    // update the amount of credits for the user\r\n\r\n    // action creator using the token from the stripe api\r\n    // using the built-in dispatch action creator\r\nexport const handleToken = token => async dispatch => {\r\n    const res = await axios.post('/api/stripe', token);\r\n    // using the same user model as the fetchUser action creator \r\n    // delivering the payload with res from this action creator and\r\n    // the user's data\r\n    dispatch({ type: FETCH_USER, payload: res.data });\r\n};\r\n","// to define action types\r\n\r\nexport const FETCH_USER = 'fetch_user';\r\n\r\n","import React, { Component } from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nclass Payments extends Component {\r\n    render(){\r\n        \r\n        return (\r\n            <StripeCheckout\r\n                name=\"Meessages\"\r\n                description=\"Five dollars for five email credits\"\r\n                amount={500}\r\n                token={ token => this.props.handleToken(token) }\r\n                stripeKey={process.env.REACT_APP_STRIPE_KEY} \r\n                >\r\n                    <button className=\"btn\">Add Credits</button>\r\n                </StripeCheckout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, actions)(Payments);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Payments from './Payments';\r\nclass Header extends Component {\r\n    renderContent(){\r\n        switch (this.props.auth) {\r\n            case null:\r\n                return 'Still deciding';\r\n\r\n            case false:\r\n                return  <li><a href='/auth/google'>Login with Google</a></li>;\r\n            \r\n            default:\r\n                return [\r\n                <li key=\"1\"><Payments /> </li>,\r\n                <li key=\"3\" style={{margin: '0 10px' }}>\r\n                    Credits: { this.props.auth.credits }\r\n                </li>,\r\n                <li key=\"2\"><a href='/api/logout'>Logout</a></li>\r\n                ];\r\n        }\r\n    }\r\n    \r\n    \r\n    render(){\r\n       \r\n        return(\r\n            \r\n        <nav>\r\n            <div className=\"nav-wrapper\">\r\n            <Link \r\n            to={this.props.auth ? '/surveys' : '/'} \r\n            className=\"left brand-logo\"\r\n            >\r\n                Meessages\r\n            </Link>\r\n            <ul className=\"right\">\r\n                { this.renderContent() }\r\n            </ul>\r\n\r\n            </div>\r\n        </nav>\r\n    );\r\n }\r\n}\r\n\r\nfunction mapStateToProps({ auth }){\r\n    return { auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n\r\n","import React from 'react';\r\n\r\nconst Landing = () => {\r\n    return (\r\n        <div style={{ textAlign: \"center\" }}>\r\n            <h1>\r\n                Meessages!\r\n            </h1>\r\n            Collect feedback from your users.\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Landing;","// Rendering layer control with React Router\r\nimport React, { Component } from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nimport Header from './Header';\r\nimport Landing from './Landing';\r\nconst Dashboard = () => <h2>Dashboard</h2>\r\nconst SurveyNew = () => <h2>SurveyNew</h2>\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchUser();\r\n    }\r\n    render() {\r\n    return (\r\n        <div className=\"container\">\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Header />\r\n                    <Route exact path=\"/\" component={Landing} />\r\n                    <Route exact path=\"/surveys\" component={Dashboard} />\r\n                    <Route path=\"/surveys/new\" component={SurveyNew} />\r\n                </div>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default connect(null, actions)(App);","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer\r\n});","import { FETCH_USER } from '../actions/types'\r\n\r\nexport default function(state = null, action) {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            return action.payload || false;\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}","// data layer control with Redux\r\n\r\n// import materialize css \r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\n\r\n\r\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}><App /></Provider>,\r\n  document.querySelector('#root')\r\n);\r\n\r\n"],"sourceRoot":""}